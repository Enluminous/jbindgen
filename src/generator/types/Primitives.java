package generator.types;

import java.lang.foreign.ValueLayout;

public enum Primitives implements  TypeAttr.NormalType, TypeAttr.ValueBased {
    Boolean("boolean", "ValueLayout.JAVA_BOOLEAN", "Boolean", ValueLayout.JAVA_BOOLEAN.byteSize()),
    Byte("byte", "ValueLayout.JAVA_BYTE", "Byte", ValueLayout.JAVA_BYTE.byteSize()),
    Short("short", "ValueLayout.JAVA_SHORT", "Short", ValueLayout.JAVA_SHORT.byteSize()),
    Char("char", "ValueLayout.JAVA_CHAR", "Character", ValueLayout.JAVA_CHAR.byteSize()),
    Integer("int", "ValueLayout.JAVA_INT", "Integer", ValueLayout.JAVA_INT.byteSize()),
    Float("float", "ValueLayout.JAVA_FLOAT", "Float", ValueLayout.JAVA_FLOAT.byteSize()),
    Double("double", "ValueLayout.JAVA_DOUBLE", "Double", ValueLayout.JAVA_DOUBLE.byteSize()),
    Address("MemorySegment", "ValueLayout.ADDRESS", "MemorySegment", ValueLayout.ADDRESS.byteSize()),
    Float16("short", "ValueLayout.JAVA_SHORT", "Float16", ValueLayout.JAVA_SHORT.byteSize()),
    // extend part
    Integer128("Integer128", "MemoryLayout.structLayout(ValueLayout.JAVA_LONG, ValueLayout.JAVA_LONG)", "Integer128", ValueLayout.JAVA_LONG.byteSize() * 2),
    LongDouble("LongDouble", "MemoryLayout.structLayout(ValueLayout.JAVA_LONG, ValueLayout.JAVA_LONG)", "LongDouble", ValueLayout.JAVA_DOUBLE.byteSize() * 2);

    private final String primitiveName;
    private final String valueLayout;
    private final String wrapperName;
    private final long byteSize;

    Primitives(String primitiveName, String memoryLayout, String wrapperName, long byteSize) {
        this.primitiveName = primitiveName;
        this.valueLayout = memoryLayout;
        this.wrapperName = wrapperName;
        this.byteSize = byteSize;
    }

    @Override
    public long getByteSize() {
        return byteSize;
    }

    @Override
    public String getMemoryLayout() {
        return valueLayout;
    }

    @Override
    public String getTypeName() {
        return wrapperName;
    }
}




















































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































